# -*- mode: ruby -*-
# vi: set ft=ruby :
require 'yaml'

## vagrant plugins required:
# vagrant-digitalocean, vagrant-aws, vagrant, vagrant-hosts, vagrant-cachier
Vagrant.configure("2") do |config|

  # https://vagrantcloud.com/puppetlabs/boxes/ubuntu-14.04-64-puppet
  config.vm.box = "puppetlabs/ubuntu-14.04-64-puppet"
  config.vm.box_version = "1.0.0"

  # If you want to use vagrant-cachier,
  # please install vagrant-cachier plugin.
  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.enable :apt
  end

  config.vm.provider :virtualbox do |vb, override|
    # Use VBoxManage to customize the VM. For example to change memory:
    vb.customize ["modifyvm", :id, "--memory", "#{1024*2}"]
    vb.customize ["modifyvm", :id,  "--cpus",  "2"]

    # Please customize hostname and private ip configuration if you needed.
    override.vm.hostname = "mesos"
    private_ip = "192.168.33.10"
    override.vm.network :private_network, ip: private_ip
    override.vm.provision :hosts do |provisioner|
      provisioner.add_host private_ip , [ config.vm.hostname ]
    end

    # Mesos web UI
    override.vm.network :forwarded_port, guest: 5050, host: 5050
    # Marathon web UI
    override.vm.network :forwarded_port, guest: 8080, host: 8080
    # Consul web UI
    override.vm.network :forwarded_port, guest: 8500, host: 8500

    override.vm.provision :shell do |s|
      s.path = "scripts/populate_sshkey.sh"
      s.args = "/home/vagrant vagrant"
    end
  end

  config.vm.provider :digital_ocean do |digital_ocean, override|
    conf = YAML.load_file('digital_ocean.yml')
    override.ssh.private_key_path = conf["ssh_private_key_path"]
    override.vm.box = 'digital_ocean'
    override.vm.box_url = "https://github.com/smdahlen/vagrant-digitalocean/raw/master/box/digital_ocean.box"

    digital_ocean.token = conf["token"]
    digital_ocean.image = conf["image"]
    digital_ocean.region = conf["region"]
    digital_ocean.size = conf["size"]
  end

  config.vm.provider :aws do |aws, override|
    conf = YAML.load_file('aws.yaml')

    if conf["custom_ami"] then
      override.vm.box = "dummy"
      override.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
    end

    aws.access_key_id = conf["access_key_id"]
    aws.secret_access_key = conf["secret_access_key"]

    aws.region = conf["region"]
    if conf["custom_ami"] then
      aws.ami = conf["custom_ami"]
    end
    aws.instance_type = conf["instance_type"]
    aws.keypair_name = conf["keypair_name"]
    aws.security_groups = conf["security_groups"]
    aws.tags = {
      Name: 'vagrant-mesos-standalone'
    }

    override.ssh.username = "ubuntu"
    override.ssh.private_key_path = conf["ssh_private_key_path"]
    override.vm.provision :shell do |s|
      s.path = "scripts/populate_sshkey.sh"
      s.args = "/home/ubuntu ubuntu"
    end
  end

  config.vm.provision "shell", path: "scripts/java8.sh"

  config.vm.provision "puppet" do |puppet|
    puppet.manifests_path    = "manifests"
    puppet.module_path       = "../modules"
    puppet.manifest_file     = "default.pp"
    puppet.hiera_config_path = "../hiera.yaml"
    puppet.options           = "--verbose --debug"
  end

  # If you wanted use `.dockercfg` file
  # Please place the file simply on this directory
  if File.exist?(".dockercfg")
    config.vm.provision :shell, :priviledged => true, :inline => <<-SCRIPT
      cp /vagrant/.dockercfg /root/.dockercfg
      chmod 600 /root/.dockercfg
      chown root /root/.dockercfg
      SCRIPT
  end
end
